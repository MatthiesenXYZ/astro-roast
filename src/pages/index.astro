---
import Layout from "../layouts/Layout.astro";
import { Card, Input, Select, Option, Button } from "astrolace:components";
import { languages } from "../lib/supportedLanguages";
import PreviousRoasts from "../components/PreviousRoasts.astro";
import { db, RoastCollection } from "astro:db";


const previousRoasts = await db.select().from(RoastCollection)

previousRoasts.sort(({ createdAt: start }, { createdAt: end }) => new Date(end).getTime() - new Date(start).getTime());

const firstRoast = previousRoasts.length > 0 ? previousRoasts[0] : null;

let ogImage = firstRoast ? `${firstRoast.language}/${firstRoast.username}` : '';
---
<Layout title="Get Roasted" description={`Get Roasted - Showing last user roasted: ${firstRoast ? firstRoast.username : "Not Available"} in ${firstRoast ? firstRoast.language : "Not Available"}`} ogImage={ogImage}>
	
	<Card class="sm:w-full sm:px-8 md:px-32 lg:px-64">
		<h2 class="text-3xl font-bold pb-2">Get Roasted</h2>
		<form id="roast" method="POST" action="/openai">
			<Input form="roast" name="username" placeholder="Enter your friend's Username" label="Github Username or Organization" helpText="Username or Organization" />

			<div class="py-2"></div>

			<Select form="roast" name="language" value="english" label="Language">
				{
					Object.entries(languages).map(([key, value]) => (
						<Option value={key}>{value.name}</Option>
					))
				}
			</Select>

			<div class="py-2"></div>

			<Button form="roast" variant="primary" size="medium" type="submit"><bold class="font-bold">Roast 'em!</bold></Button>
		</form>
	</Card>

	<div class="py-2"></div>

	<Card id="roast-result" style="display: none;" class="sm:w-full sm:px-8 md:px-32 lg:px-64">
		<h2 class="text-2xl font-bold">Roast Result</h2>
		<div class="py-2"></div>
		<p style="white-space: pre-line;">Your roast will appear here!</p>
		<div class="pt-4 text-blue font-bold text-align-right">
			<a id="roastedurlpath" href="#">Shareable link</a>
		</div>
	</Card>

	<div class="py-2"></div>

	<PreviousRoasts />

	<script>
		const form = document.getElementById('roast') as HTMLFormElement;

		form?.addEventListener('submit', async (event) => {
			event.preventDefault();

			const formData = new FormData(form);
			const username = formData.get('username');
			const language = formData.get('language');

			// Perform the fetch request to the OpenAI API
			fetch(form.action, {
				method: form.method,
				body: new FormData(form),
			})
			.then(response => response.json())
			.then(data => {
				// Update the roast result card with the response

				const roastResultCard = document.querySelector('#roast-result') as HTMLDivElement;
				roastResultCard.style.display = 'block';
				const roastResultText = roastResultCard.querySelector('p') as HTMLParagraphElement;
				roastResultText.textContent = data.roast;

				// Update the shareable link
				const roastedUrlPath = document.querySelector('#roastedurlpath') as HTMLAnchorElement;
				roastedUrlPath.href = `/${language}/${username}`;
			})
			.catch(error => {
				console.error('Error:', error);
			});
		});
	</script>
</Layout>